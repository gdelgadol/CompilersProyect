
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'expressionleftPLUSMINUSleftTIMESDIVIDEleftPOWERrightUMINUSCOS DIVIDE EQUALS EXP FRACTION LBRACE LBRACK LOG LPAREN MINUS NAME NUMBER PI PLUS POWER RBRACE RBRACK RPAREN SEP SIN SQRT TAN TIMESexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expression\n                  | expression POWER expressionexpression : FRACTION LBRACE expression RBRACE LBRACE expression RBRACEexpression : SQRT groupingexpression : SIN grouping\n                  | COS grouping\n                  | TAN grouping\n                  | LOG grouping\n                  | EXP groupingexpression : PIgrouping : LBRACE expression RBRACE\n                | LPAREN expression RPARENexpression : NUMBERexpression : NAMEexpression : LPAREN expression RPAREN %prec UMINUS'
    
_lr_action_items = {'FRACTION':([0,12,13,14,15,16,17,18,20,21,40,],[2,2,2,2,2,2,2,2,2,2,2,]),'SQRT':([0,12,13,14,15,16,17,18,20,21,40,],[3,3,3,3,3,3,3,3,3,3,3,]),'SIN':([0,12,13,14,15,16,17,18,20,21,40,],[4,4,4,4,4,4,4,4,4,4,4,]),'COS':([0,12,13,14,15,16,17,18,20,21,40,],[5,5,5,5,5,5,5,5,5,5,5,]),'TAN':([0,12,13,14,15,16,17,18,20,21,40,],[6,6,6,6,6,6,6,6,6,6,6,]),'LOG':([0,12,13,14,15,16,17,18,20,21,40,],[7,7,7,7,7,7,7,7,7,7,7,]),'EXP':([0,12,13,14,15,16,17,18,20,21,40,],[8,8,8,8,8,8,8,8,8,8,8,]),'PI':([0,12,13,14,15,16,17,18,20,21,40,],[9,9,9,9,9,9,9,9,9,9,9,]),'NUMBER':([0,12,13,14,15,16,17,18,20,21,40,],[10,10,10,10,10,10,10,10,10,10,10,]),'NAME':([0,12,13,14,15,16,17,18,20,21,40,],[11,11,11,11,11,11,11,11,11,11,11,]),'LPAREN':([0,3,4,5,6,7,8,12,13,14,15,16,17,18,20,21,40,],[12,21,21,21,21,21,21,12,12,12,12,12,12,12,12,12,12,]),'$end':([1,9,10,11,19,22,23,24,25,26,28,29,30,31,32,36,38,39,42,],[0,-13,-16,-17,-7,-8,-9,-10,-11,-12,-1,-2,-3,-4,-5,-18,-14,-15,-6,]),'PLUS':([1,9,10,11,19,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,38,39,41,42,],[13,-13,-16,-17,-7,-8,-9,-10,-11,-12,13,-1,-2,-3,-4,-5,13,13,13,-18,-14,-15,13,-6,]),'MINUS':([1,9,10,11,19,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,38,39,41,42,],[14,-13,-16,-17,-7,-8,-9,-10,-11,-12,14,-1,-2,-3,-4,-5,14,14,14,-18,-14,-15,14,-6,]),'TIMES':([1,9,10,11,19,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,38,39,41,42,],[15,-13,-16,-17,-7,-8,-9,-10,-11,-12,15,15,15,-3,-4,-5,15,15,15,-18,-14,-15,15,-6,]),'DIVIDE':([1,9,10,11,19,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,38,39,41,42,],[16,-13,-16,-17,-7,-8,-9,-10,-11,-12,16,16,16,-3,-4,-5,16,16,16,-18,-14,-15,16,-6,]),'POWER':([1,9,10,11,19,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,38,39,41,42,],[17,-13,-16,-17,-7,-8,-9,-10,-11,-12,17,17,17,17,17,-5,17,17,17,-18,-14,-15,17,-6,]),'LBRACE':([2,3,4,5,6,7,8,37,],[18,20,20,20,20,20,20,40,]),'RPAREN':([9,10,11,19,22,23,24,25,26,27,28,29,30,31,32,35,36,38,39,42,],[-13,-16,-17,-7,-8,-9,-10,-11,-12,36,-1,-2,-3,-4,-5,39,-18,-14,-15,-6,]),'RBRACE':([9,10,11,19,22,23,24,25,26,28,29,30,31,32,33,34,36,38,39,41,42,],[-13,-16,-17,-7,-8,-9,-10,-11,-12,-1,-2,-3,-4,-5,37,38,-18,-14,-15,42,-6,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([0,12,13,14,15,16,17,18,20,21,40,],[1,27,28,29,30,31,32,33,34,35,41,]),'grouping':([3,4,5,6,7,8,],[19,22,23,24,25,26,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expression","S'",1,None,None,None),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','parse.py',15),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','parse.py',16),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','parse.py',17),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','parse.py',18),
  ('expression -> expression POWER expression','expression',3,'p_expression_binop','parse.py',19),
  ('expression -> FRACTION LBRACE expression RBRACE LBRACE expression RBRACE','expression',7,'p_expression_fraction','parse.py',27),
  ('expression -> SQRT grouping','expression',2,'p_expression_sqrt','parse.py',31),
  ('expression -> SIN grouping','expression',2,'p_expression_function','parse.py',35),
  ('expression -> COS grouping','expression',2,'p_expression_function','parse.py',36),
  ('expression -> TAN grouping','expression',2,'p_expression_function','parse.py',37),
  ('expression -> LOG grouping','expression',2,'p_expression_function','parse.py',38),
  ('expression -> EXP grouping','expression',2,'p_expression_function','parse.py',39),
  ('expression -> PI','expression',1,'p_expression_pi','parse.py',43),
  ('grouping -> LBRACE expression RBRACE','grouping',3,'p_grouping','parse.py',48),
  ('grouping -> LPAREN expression RPAREN','grouping',3,'p_grouping','parse.py',49),
  ('expression -> NUMBER','expression',1,'p_expression_number','parse.py',53),
  ('expression -> NAME','expression',1,'p_expression_variable','parse.py',57),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_parens','parse.py',61),
]
